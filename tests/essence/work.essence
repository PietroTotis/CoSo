language Essence 1.3

letting n be 3
letting l be 3

letting mul be new type enum {e1,e2,e3}
letting pf be {e2,e3}
letting f be function(e1 --> 1, e2 --> 3, e3 --> 2)

find s : sequence (size l) of mul
    such that 
    forAll e: mul.
        sum([1 | i: int(1..l), s(i)=e]) <= f(e) /\
    s(2) = e2 /\
    sum([1 | i: int(1..l), s(i) in pf]) <=2
