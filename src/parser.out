Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> declare_set SEMI
Rule 4     statement -> arrangement SEMI
Rule 5     statement -> aggcmp SEMI
Rule 6     statement -> pos_constraint SEMI
Rule 7     statement -> count_constraint SEMI
Rule 8     entity -> NUMBER
Rule 9     entity -> LABEL
Rule 10    replace -> SLASH
Rule 11    replace -> SLASH SLASH
Rule 12    entity_list -> entity
Rule 13    entity_list -> entity COMMA entity_list
Rule 14    comp -> EQUALS
Rule 15    comp -> LT
Rule 16    comp -> GT
Rule 17    comp -> GT EQUALS
Rule 18    comp -> LT EQUALS
Rule 19    comp -> DIFF EQUALS
Rule 20    base_set -> LABEL
Rule 21    base_set -> LABEL LSPAR NUMBER RSPAR
Rule 22    base_set -> UNIVERSE
Rule 23    set -> base_set
Rule 24    set -> PART
Rule 25    set -> LRPAR set RRPAR
Rule 26    set -> NOT set
Rule 27    set -> set INTER set
Rule 28    set -> set UNION set
Rule 29    declare_set -> PROP LABEL EQUALS LPAR entity_list RPAR
Rule 30    declare_set -> UNIVERSE LABEL EQUALS LPAR entity_list RPAR
Rule 31    declare_set -> PROP UNIVERSE EQUALS LPAR entity_list RPAR
Rule 32    declare_set -> LAB PROP LABEL EQUALS LPAR entity_list RPAR
Rule 33    declare_set -> PROP LABEL
Rule 34    declare_set -> LAB PROP LABEL
Rule 35    arrangement -> LABEL IN LPAR replace set RPAR
Rule 36    arrangement -> LABEL IN LSPAR replace set RSPAR
Rule 37    arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR
Rule 38    arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR
Rule 39    math_op -> SUM
Rule 40    math_op -> MIN
Rule 41    math_op -> MAX
Rule 42    aggcmp -> math_op LRPAR set RRPAR comp NUMBER
Rule 43    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity
Rule 44    pos_constraint -> LABEL LSPAR NUMBER RSPAR IN set
Rule 45    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
Rule 46    count_constraint -> COUNT set comp NUMBER
Rule 47    count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER

Terminals, with rules where they appear

COMMA                : 13
COMPOSITIONS         : 38
COUNT                : 46 47
DIFF                 : 19
EQUALS               : 14 17 18 19 29 30 31 32 43 45
GT                   : 16 17
IN                   : 35 36 37 38 44
INTER                : 27
LAB                  : 32 34
LABEL                : 9 20 21 29 30 32 33 34 35 36 37 38 43 44 45
LPAR                 : 29 30 31 32 35 45 47
LRPAR                : 25 37 38 42
LSPAR                : 21 36 43 44 45
LT                   : 15 18
MAX                  : 41
MIN                  : 40
NOT                  : 26
NUMBER               : 8 21 42 43 44 45 46 47
PART                 : 24
PARTITIONS           : 37
PROP                 : 29 31 32 33 34
RPAR                 : 29 30 31 32 35 45 47
RRPAR                : 25 37 38 42
RSPAR                : 21 36 43 44 45
SEMI                 : 3 4 5 6 7
SLASH                : 10 11 11
SUM                  : 39
UNION                : 28
UNIVERSE             : 22 30 31
error                : 

Nonterminals, with rules where they appear

aggcmp               : 5
arrangement          : 4
base_set             : 23
comp                 : 42 46 47
count_constraint     : 7 47
declare_set          : 3
entity               : 12 13 43
entity_list          : 13 29 30 31 32 45
math_op              : 42
pos_constraint       : 6
program              : 2 0
replace              : 35 36
set                  : 25 26 27 27 28 28 35 36 37 38 42 44 46
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . declare_set SEMI
    (4) statement -> . arrangement SEMI
    (5) statement -> . aggcmp SEMI
    (6) statement -> . pos_constraint SEMI
    (7) statement -> . count_constraint SEMI
    (29) declare_set -> . PROP LABEL EQUALS LPAR entity_list RPAR
    (30) declare_set -> . UNIVERSE LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> . PROP UNIVERSE EQUALS LPAR entity_list RPAR
    (32) declare_set -> . LAB PROP LABEL EQUALS LPAR entity_list RPAR
    (33) declare_set -> . PROP LABEL
    (34) declare_set -> . LAB PROP LABEL
    (35) arrangement -> . LABEL IN LPAR replace set RPAR
    (36) arrangement -> . LABEL IN LSPAR replace set RSPAR
    (37) arrangement -> . LABEL IN PARTITIONS LRPAR set RRPAR
    (38) arrangement -> . LABEL IN COMPOSITIONS LRPAR set RRPAR
    (42) aggcmp -> . math_op LRPAR set RRPAR comp NUMBER
    (43) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS entity
    (44) pos_constraint -> . LABEL LSPAR NUMBER RSPAR IN set
    (45) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (46) count_constraint -> . COUNT set comp NUMBER
    (47) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER
    (39) math_op -> . SUM
    (40) math_op -> . MIN
    (41) math_op -> . MAX

    PROP            shift and go to state 8
    UNIVERSE        shift and go to state 10
    LAB             shift and go to state 11
    LABEL           shift and go to state 9
    COUNT           shift and go to state 13
    SUM             shift and go to state 14
    MIN             shift and go to state 15
    MAX             shift and go to state 16

    program                        shift and go to state 1
    statement                      shift and go to state 2
    declare_set                    shift and go to state 3
    arrangement                    shift and go to state 4
    aggcmp                         shift and go to state 5
    pos_constraint                 shift and go to state 6
    count_constraint               shift and go to state 7
    math_op                        shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . declare_set SEMI
    (4) statement -> . arrangement SEMI
    (5) statement -> . aggcmp SEMI
    (6) statement -> . pos_constraint SEMI
    (7) statement -> . count_constraint SEMI
    (29) declare_set -> . PROP LABEL EQUALS LPAR entity_list RPAR
    (30) declare_set -> . UNIVERSE LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> . PROP UNIVERSE EQUALS LPAR entity_list RPAR
    (32) declare_set -> . LAB PROP LABEL EQUALS LPAR entity_list RPAR
    (33) declare_set -> . PROP LABEL
    (34) declare_set -> . LAB PROP LABEL
    (35) arrangement -> . LABEL IN LPAR replace set RPAR
    (36) arrangement -> . LABEL IN LSPAR replace set RSPAR
    (37) arrangement -> . LABEL IN PARTITIONS LRPAR set RRPAR
    (38) arrangement -> . LABEL IN COMPOSITIONS LRPAR set RRPAR
    (42) aggcmp -> . math_op LRPAR set RRPAR comp NUMBER
    (43) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS entity
    (44) pos_constraint -> . LABEL LSPAR NUMBER RSPAR IN set
    (45) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (46) count_constraint -> . COUNT set comp NUMBER
    (47) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER
    (39) math_op -> . SUM
    (40) math_op -> . MIN
    (41) math_op -> . MAX

    $end            reduce using rule 1 (program -> statement .)
    PROP            shift and go to state 8
    UNIVERSE        shift and go to state 10
    LAB             shift and go to state 11
    LABEL           shift and go to state 9
    COUNT           shift and go to state 13
    SUM             shift and go to state 14
    MIN             shift and go to state 15
    MAX             shift and go to state 16

    statement                      shift and go to state 2
    program                        shift and go to state 17
    declare_set                    shift and go to state 3
    arrangement                    shift and go to state 4
    aggcmp                         shift and go to state 5
    pos_constraint                 shift and go to state 6
    count_constraint               shift and go to state 7
    math_op                        shift and go to state 12

state 3

    (3) statement -> declare_set . SEMI

    SEMI            shift and go to state 18


state 4

    (4) statement -> arrangement . SEMI

    SEMI            shift and go to state 19


state 5

    (5) statement -> aggcmp . SEMI

    SEMI            shift and go to state 20


state 6

    (6) statement -> pos_constraint . SEMI

    SEMI            shift and go to state 21


state 7

    (7) statement -> count_constraint . SEMI

    SEMI            shift and go to state 22


state 8

    (29) declare_set -> PROP . LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> PROP . UNIVERSE EQUALS LPAR entity_list RPAR
    (33) declare_set -> PROP . LABEL

    LABEL           shift and go to state 23
    UNIVERSE        shift and go to state 24


state 9

    (35) arrangement -> LABEL . IN LPAR replace set RPAR
    (36) arrangement -> LABEL . IN LSPAR replace set RSPAR
    (37) arrangement -> LABEL . IN PARTITIONS LRPAR set RRPAR
    (38) arrangement -> LABEL . IN COMPOSITIONS LRPAR set RRPAR
    (43) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS entity
    (44) pos_constraint -> LABEL . LSPAR NUMBER RSPAR IN set
    (45) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR

    IN              shift and go to state 25
    LSPAR           shift and go to state 26


state 10

    (30) declare_set -> UNIVERSE . LABEL EQUALS LPAR entity_list RPAR

    LABEL           shift and go to state 27


state 11

    (32) declare_set -> LAB . PROP LABEL EQUALS LPAR entity_list RPAR
    (34) declare_set -> LAB . PROP LABEL

    PROP            shift and go to state 28


state 12

    (42) aggcmp -> math_op . LRPAR set RRPAR comp NUMBER

    LRPAR           shift and go to state 29


state 13

    (46) count_constraint -> COUNT . set comp NUMBER
    (47) count_constraint -> COUNT . LPAR count_constraint RPAR comp NUMBER
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    LPAR            shift and go to state 31
    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 30
    base_set                       shift and go to state 32

state 14

    (39) math_op -> SUM .

    LRPAR           reduce using rule 39 (math_op -> SUM .)


state 15

    (40) math_op -> MIN .

    LRPAR           reduce using rule 40 (math_op -> MIN .)


state 16

    (41) math_op -> MAX .

    LRPAR           reduce using rule 41 (math_op -> MAX .)


state 17

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 18

    (3) statement -> declare_set SEMI .

    PROP            reduce using rule 3 (statement -> declare_set SEMI .)
    UNIVERSE        reduce using rule 3 (statement -> declare_set SEMI .)
    LAB             reduce using rule 3 (statement -> declare_set SEMI .)
    LABEL           reduce using rule 3 (statement -> declare_set SEMI .)
    COUNT           reduce using rule 3 (statement -> declare_set SEMI .)
    SUM             reduce using rule 3 (statement -> declare_set SEMI .)
    MIN             reduce using rule 3 (statement -> declare_set SEMI .)
    MAX             reduce using rule 3 (statement -> declare_set SEMI .)
    $end            reduce using rule 3 (statement -> declare_set SEMI .)


state 19

    (4) statement -> arrangement SEMI .

    PROP            reduce using rule 4 (statement -> arrangement SEMI .)
    UNIVERSE        reduce using rule 4 (statement -> arrangement SEMI .)
    LAB             reduce using rule 4 (statement -> arrangement SEMI .)
    LABEL           reduce using rule 4 (statement -> arrangement SEMI .)
    COUNT           reduce using rule 4 (statement -> arrangement SEMI .)
    SUM             reduce using rule 4 (statement -> arrangement SEMI .)
    MIN             reduce using rule 4 (statement -> arrangement SEMI .)
    MAX             reduce using rule 4 (statement -> arrangement SEMI .)
    $end            reduce using rule 4 (statement -> arrangement SEMI .)


state 20

    (5) statement -> aggcmp SEMI .

    PROP            reduce using rule 5 (statement -> aggcmp SEMI .)
    UNIVERSE        reduce using rule 5 (statement -> aggcmp SEMI .)
    LAB             reduce using rule 5 (statement -> aggcmp SEMI .)
    LABEL           reduce using rule 5 (statement -> aggcmp SEMI .)
    COUNT           reduce using rule 5 (statement -> aggcmp SEMI .)
    SUM             reduce using rule 5 (statement -> aggcmp SEMI .)
    MIN             reduce using rule 5 (statement -> aggcmp SEMI .)
    MAX             reduce using rule 5 (statement -> aggcmp SEMI .)
    $end            reduce using rule 5 (statement -> aggcmp SEMI .)


state 21

    (6) statement -> pos_constraint SEMI .

    PROP            reduce using rule 6 (statement -> pos_constraint SEMI .)
    UNIVERSE        reduce using rule 6 (statement -> pos_constraint SEMI .)
    LAB             reduce using rule 6 (statement -> pos_constraint SEMI .)
    LABEL           reduce using rule 6 (statement -> pos_constraint SEMI .)
    COUNT           reduce using rule 6 (statement -> pos_constraint SEMI .)
    SUM             reduce using rule 6 (statement -> pos_constraint SEMI .)
    MIN             reduce using rule 6 (statement -> pos_constraint SEMI .)
    MAX             reduce using rule 6 (statement -> pos_constraint SEMI .)
    $end            reduce using rule 6 (statement -> pos_constraint SEMI .)


state 22

    (7) statement -> count_constraint SEMI .

    PROP            reduce using rule 7 (statement -> count_constraint SEMI .)
    UNIVERSE        reduce using rule 7 (statement -> count_constraint SEMI .)
    LAB             reduce using rule 7 (statement -> count_constraint SEMI .)
    LABEL           reduce using rule 7 (statement -> count_constraint SEMI .)
    COUNT           reduce using rule 7 (statement -> count_constraint SEMI .)
    SUM             reduce using rule 7 (statement -> count_constraint SEMI .)
    MIN             reduce using rule 7 (statement -> count_constraint SEMI .)
    MAX             reduce using rule 7 (statement -> count_constraint SEMI .)
    $end            reduce using rule 7 (statement -> count_constraint SEMI .)


state 23

    (29) declare_set -> PROP LABEL . EQUALS LPAR entity_list RPAR
    (33) declare_set -> PROP LABEL .

    EQUALS          shift and go to state 38
    SEMI            reduce using rule 33 (declare_set -> PROP LABEL .)


state 24

    (31) declare_set -> PROP UNIVERSE . EQUALS LPAR entity_list RPAR

    EQUALS          shift and go to state 39


state 25

    (35) arrangement -> LABEL IN . LPAR replace set RPAR
    (36) arrangement -> LABEL IN . LSPAR replace set RSPAR
    (37) arrangement -> LABEL IN . PARTITIONS LRPAR set RRPAR
    (38) arrangement -> LABEL IN . COMPOSITIONS LRPAR set RRPAR

    LPAR            shift and go to state 40
    LSPAR           shift and go to state 41
    PARTITIONS      shift and go to state 42
    COMPOSITIONS    shift and go to state 43


state 26

    (43) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS entity
    (44) pos_constraint -> LABEL LSPAR . NUMBER RSPAR IN set
    (45) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS LPAR entity_list RPAR

    NUMBER          shift and go to state 44


state 27

    (30) declare_set -> UNIVERSE LABEL . EQUALS LPAR entity_list RPAR

    EQUALS          shift and go to state 45


state 28

    (32) declare_set -> LAB PROP . LABEL EQUALS LPAR entity_list RPAR
    (34) declare_set -> LAB PROP . LABEL

    LABEL           shift and go to state 46


state 29

    (42) aggcmp -> math_op LRPAR . set RRPAR comp NUMBER
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 47
    base_set                       shift and go to state 32

state 30

    (46) count_constraint -> COUNT set . comp NUMBER
    (27) set -> set . INTER set
    (28) set -> set . UNION set
    (14) comp -> . EQUALS
    (15) comp -> . LT
    (16) comp -> . GT
    (17) comp -> . GT EQUALS
    (18) comp -> . LT EQUALS
    (19) comp -> . DIFF EQUALS

    INTER           shift and go to state 49
    UNION           shift and go to state 50
    EQUALS          shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    DIFF            shift and go to state 54

    comp                           shift and go to state 48

state 31

    (47) count_constraint -> COUNT LPAR . count_constraint RPAR comp NUMBER
    (46) count_constraint -> . COUNT set comp NUMBER
    (47) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER

    COUNT           shift and go to state 13

    count_constraint               shift and go to state 55

state 32

    (23) set -> base_set .

    INTER           reduce using rule 23 (set -> base_set .)
    UNION           reduce using rule 23 (set -> base_set .)
    EQUALS          reduce using rule 23 (set -> base_set .)
    LT              reduce using rule 23 (set -> base_set .)
    GT              reduce using rule 23 (set -> base_set .)
    DIFF            reduce using rule 23 (set -> base_set .)
    RRPAR           reduce using rule 23 (set -> base_set .)
    RPAR            reduce using rule 23 (set -> base_set .)
    RSPAR           reduce using rule 23 (set -> base_set .)
    SEMI            reduce using rule 23 (set -> base_set .)


state 33

    (24) set -> PART .

    INTER           reduce using rule 24 (set -> PART .)
    UNION           reduce using rule 24 (set -> PART .)
    EQUALS          reduce using rule 24 (set -> PART .)
    LT              reduce using rule 24 (set -> PART .)
    GT              reduce using rule 24 (set -> PART .)
    DIFF            reduce using rule 24 (set -> PART .)
    RRPAR           reduce using rule 24 (set -> PART .)
    RPAR            reduce using rule 24 (set -> PART .)
    RSPAR           reduce using rule 24 (set -> PART .)
    SEMI            reduce using rule 24 (set -> PART .)


state 34

    (25) set -> LRPAR . set RRPAR
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 56
    base_set                       shift and go to state 32

state 35

    (26) set -> NOT . set
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 57
    base_set                       shift and go to state 32

state 36

    (20) base_set -> LABEL .
    (21) base_set -> LABEL . LSPAR NUMBER RSPAR

    INTER           reduce using rule 20 (base_set -> LABEL .)
    UNION           reduce using rule 20 (base_set -> LABEL .)
    EQUALS          reduce using rule 20 (base_set -> LABEL .)
    LT              reduce using rule 20 (base_set -> LABEL .)
    GT              reduce using rule 20 (base_set -> LABEL .)
    DIFF            reduce using rule 20 (base_set -> LABEL .)
    RRPAR           reduce using rule 20 (base_set -> LABEL .)
    RPAR            reduce using rule 20 (base_set -> LABEL .)
    RSPAR           reduce using rule 20 (base_set -> LABEL .)
    SEMI            reduce using rule 20 (base_set -> LABEL .)
    LSPAR           shift and go to state 58


state 37

    (22) base_set -> UNIVERSE .

    INTER           reduce using rule 22 (base_set -> UNIVERSE .)
    UNION           reduce using rule 22 (base_set -> UNIVERSE .)
    EQUALS          reduce using rule 22 (base_set -> UNIVERSE .)
    LT              reduce using rule 22 (base_set -> UNIVERSE .)
    GT              reduce using rule 22 (base_set -> UNIVERSE .)
    DIFF            reduce using rule 22 (base_set -> UNIVERSE .)
    RRPAR           reduce using rule 22 (base_set -> UNIVERSE .)
    RPAR            reduce using rule 22 (base_set -> UNIVERSE .)
    RSPAR           reduce using rule 22 (base_set -> UNIVERSE .)
    SEMI            reduce using rule 22 (base_set -> UNIVERSE .)


state 38

    (29) declare_set -> PROP LABEL EQUALS . LPAR entity_list RPAR

    LPAR            shift and go to state 59


state 39

    (31) declare_set -> PROP UNIVERSE EQUALS . LPAR entity_list RPAR

    LPAR            shift and go to state 60


state 40

    (35) arrangement -> LABEL IN LPAR . replace set RPAR
    (10) replace -> . SLASH
    (11) replace -> . SLASH SLASH

    SLASH           shift and go to state 62

    replace                        shift and go to state 61

state 41

    (36) arrangement -> LABEL IN LSPAR . replace set RSPAR
    (10) replace -> . SLASH
    (11) replace -> . SLASH SLASH

    SLASH           shift and go to state 62

    replace                        shift and go to state 63

state 42

    (37) arrangement -> LABEL IN PARTITIONS . LRPAR set RRPAR

    LRPAR           shift and go to state 64


state 43

    (38) arrangement -> LABEL IN COMPOSITIONS . LRPAR set RRPAR

    LRPAR           shift and go to state 65


state 44

    (43) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS entity
    (44) pos_constraint -> LABEL LSPAR NUMBER . RSPAR IN set
    (45) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS LPAR entity_list RPAR

    RSPAR           shift and go to state 66


state 45

    (30) declare_set -> UNIVERSE LABEL EQUALS . LPAR entity_list RPAR

    LPAR            shift and go to state 67


state 46

    (32) declare_set -> LAB PROP LABEL . EQUALS LPAR entity_list RPAR
    (34) declare_set -> LAB PROP LABEL .

    EQUALS          shift and go to state 68
    SEMI            reduce using rule 34 (declare_set -> LAB PROP LABEL .)


state 47

    (42) aggcmp -> math_op LRPAR set . RRPAR comp NUMBER
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RRPAR           shift and go to state 69
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 48

    (46) count_constraint -> COUNT set comp . NUMBER

    NUMBER          shift and go to state 70


state 49

    (27) set -> set INTER . set
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 71
    base_set                       shift and go to state 32

state 50

    (28) set -> set UNION . set
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 72
    base_set                       shift and go to state 32

state 51

    (14) comp -> EQUALS .

    NUMBER          reduce using rule 14 (comp -> EQUALS .)


state 52

    (15) comp -> LT .
    (18) comp -> LT . EQUALS

    NUMBER          reduce using rule 15 (comp -> LT .)
    EQUALS          shift and go to state 73


state 53

    (16) comp -> GT .
    (17) comp -> GT . EQUALS

    NUMBER          reduce using rule 16 (comp -> GT .)
    EQUALS          shift and go to state 74


state 54

    (19) comp -> DIFF . EQUALS

    EQUALS          shift and go to state 75


state 55

    (47) count_constraint -> COUNT LPAR count_constraint . RPAR comp NUMBER

    RPAR            shift and go to state 76


state 56

    (25) set -> LRPAR set . RRPAR
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RRPAR           shift and go to state 77
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 57

    (26) set -> NOT set .
    (27) set -> set . INTER set
    (28) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    EQUALS          reduce using rule 26 (set -> NOT set .)
    LT              reduce using rule 26 (set -> NOT set .)
    GT              reduce using rule 26 (set -> NOT set .)
    DIFF            reduce using rule 26 (set -> NOT set .)
    RRPAR           reduce using rule 26 (set -> NOT set .)
    RPAR            reduce using rule 26 (set -> NOT set .)
    RSPAR           reduce using rule 26 (set -> NOT set .)
    SEMI            reduce using rule 26 (set -> NOT set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 26 (set -> NOT set .) ]
  ! UNION           [ reduce using rule 26 (set -> NOT set .) ]


state 58

    (21) base_set -> LABEL LSPAR . NUMBER RSPAR

    NUMBER          shift and go to state 78


state 59

    (29) declare_set -> PROP LABEL EQUALS LPAR . entity_list RPAR
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity_list                    shift and go to state 80
    entity                         shift and go to state 81

state 60

    (31) declare_set -> PROP UNIVERSE EQUALS LPAR . entity_list RPAR
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity_list                    shift and go to state 83
    entity                         shift and go to state 81

state 61

    (35) arrangement -> LABEL IN LPAR replace . set RPAR
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 84
    base_set                       shift and go to state 32

state 62

    (10) replace -> SLASH .
    (11) replace -> SLASH . SLASH

    PART            reduce using rule 10 (replace -> SLASH .)
    LRPAR           reduce using rule 10 (replace -> SLASH .)
    NOT             reduce using rule 10 (replace -> SLASH .)
    LABEL           reduce using rule 10 (replace -> SLASH .)
    UNIVERSE        reduce using rule 10 (replace -> SLASH .)
    SLASH           shift and go to state 85


state 63

    (36) arrangement -> LABEL IN LSPAR replace . set RSPAR
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 86
    base_set                       shift and go to state 32

state 64

    (37) arrangement -> LABEL IN PARTITIONS LRPAR . set RRPAR
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 87
    base_set                       shift and go to state 32

state 65

    (38) arrangement -> LABEL IN COMPOSITIONS LRPAR . set RRPAR
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 88
    base_set                       shift and go to state 32

state 66

    (43) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS entity
    (44) pos_constraint -> LABEL LSPAR NUMBER RSPAR . IN set
    (45) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS LPAR entity_list RPAR

    EQUALS          shift and go to state 89
    IN              shift and go to state 90


state 67

    (30) declare_set -> UNIVERSE LABEL EQUALS LPAR . entity_list RPAR
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity_list                    shift and go to state 91
    entity                         shift and go to state 81

state 68

    (32) declare_set -> LAB PROP LABEL EQUALS . LPAR entity_list RPAR

    LPAR            shift and go to state 92


state 69

    (42) aggcmp -> math_op LRPAR set RRPAR . comp NUMBER
    (14) comp -> . EQUALS
    (15) comp -> . LT
    (16) comp -> . GT
    (17) comp -> . GT EQUALS
    (18) comp -> . LT EQUALS
    (19) comp -> . DIFF EQUALS

    EQUALS          shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    DIFF            shift and go to state 54

    comp                           shift and go to state 93

state 70

    (46) count_constraint -> COUNT set comp NUMBER .

    SEMI            reduce using rule 46 (count_constraint -> COUNT set comp NUMBER .)
    RPAR            reduce using rule 46 (count_constraint -> COUNT set comp NUMBER .)


state 71

    (27) set -> set INTER set .
    (27) set -> set . INTER set
    (28) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    EQUALS          reduce using rule 27 (set -> set INTER set .)
    LT              reduce using rule 27 (set -> set INTER set .)
    GT              reduce using rule 27 (set -> set INTER set .)
    DIFF            reduce using rule 27 (set -> set INTER set .)
    RRPAR           reduce using rule 27 (set -> set INTER set .)
    RPAR            reduce using rule 27 (set -> set INTER set .)
    RSPAR           reduce using rule 27 (set -> set INTER set .)
    SEMI            reduce using rule 27 (set -> set INTER set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 27 (set -> set INTER set .) ]
  ! UNION           [ reduce using rule 27 (set -> set INTER set .) ]


state 72

    (28) set -> set UNION set .
    (27) set -> set . INTER set
    (28) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    EQUALS          reduce using rule 28 (set -> set UNION set .)
    LT              reduce using rule 28 (set -> set UNION set .)
    GT              reduce using rule 28 (set -> set UNION set .)
    DIFF            reduce using rule 28 (set -> set UNION set .)
    RRPAR           reduce using rule 28 (set -> set UNION set .)
    RPAR            reduce using rule 28 (set -> set UNION set .)
    RSPAR           reduce using rule 28 (set -> set UNION set .)
    SEMI            reduce using rule 28 (set -> set UNION set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 28 (set -> set UNION set .) ]
  ! UNION           [ reduce using rule 28 (set -> set UNION set .) ]


state 73

    (18) comp -> LT EQUALS .

    NUMBER          reduce using rule 18 (comp -> LT EQUALS .)


state 74

    (17) comp -> GT EQUALS .

    NUMBER          reduce using rule 17 (comp -> GT EQUALS .)


state 75

    (19) comp -> DIFF EQUALS .

    NUMBER          reduce using rule 19 (comp -> DIFF EQUALS .)


state 76

    (47) count_constraint -> COUNT LPAR count_constraint RPAR . comp NUMBER
    (14) comp -> . EQUALS
    (15) comp -> . LT
    (16) comp -> . GT
    (17) comp -> . GT EQUALS
    (18) comp -> . LT EQUALS
    (19) comp -> . DIFF EQUALS

    EQUALS          shift and go to state 51
    LT              shift and go to state 52
    GT              shift and go to state 53
    DIFF            shift and go to state 54

    comp                           shift and go to state 94

state 77

    (25) set -> LRPAR set RRPAR .

    INTER           reduce using rule 25 (set -> LRPAR set RRPAR .)
    UNION           reduce using rule 25 (set -> LRPAR set RRPAR .)
    EQUALS          reduce using rule 25 (set -> LRPAR set RRPAR .)
    LT              reduce using rule 25 (set -> LRPAR set RRPAR .)
    GT              reduce using rule 25 (set -> LRPAR set RRPAR .)
    DIFF            reduce using rule 25 (set -> LRPAR set RRPAR .)
    RRPAR           reduce using rule 25 (set -> LRPAR set RRPAR .)
    RPAR            reduce using rule 25 (set -> LRPAR set RRPAR .)
    RSPAR           reduce using rule 25 (set -> LRPAR set RRPAR .)
    SEMI            reduce using rule 25 (set -> LRPAR set RRPAR .)


state 78

    (21) base_set -> LABEL LSPAR NUMBER . RSPAR

    RSPAR           shift and go to state 95


state 79

    (9) entity -> LABEL .

    COMMA           reduce using rule 9 (entity -> LABEL .)
    RPAR            reduce using rule 9 (entity -> LABEL .)
    SEMI            reduce using rule 9 (entity -> LABEL .)


state 80

    (29) declare_set -> PROP LABEL EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 96


state 81

    (12) entity_list -> entity .
    (13) entity_list -> entity . COMMA entity_list

    RPAR            reduce using rule 12 (entity_list -> entity .)
    COMMA           shift and go to state 97


state 82

    (8) entity -> NUMBER .

    COMMA           reduce using rule 8 (entity -> NUMBER .)
    RPAR            reduce using rule 8 (entity -> NUMBER .)
    SEMI            reduce using rule 8 (entity -> NUMBER .)


state 83

    (31) declare_set -> PROP UNIVERSE EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 98


state 84

    (35) arrangement -> LABEL IN LPAR replace set . RPAR
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RPAR            shift and go to state 99
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 85

    (11) replace -> SLASH SLASH .

    PART            reduce using rule 11 (replace -> SLASH SLASH .)
    LRPAR           reduce using rule 11 (replace -> SLASH SLASH .)
    NOT             reduce using rule 11 (replace -> SLASH SLASH .)
    LABEL           reduce using rule 11 (replace -> SLASH SLASH .)
    UNIVERSE        reduce using rule 11 (replace -> SLASH SLASH .)


state 86

    (36) arrangement -> LABEL IN LSPAR replace set . RSPAR
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RSPAR           shift and go to state 100
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 87

    (37) arrangement -> LABEL IN PARTITIONS LRPAR set . RRPAR
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RRPAR           shift and go to state 101
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 88

    (38) arrangement -> LABEL IN COMPOSITIONS LRPAR set . RRPAR
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    RRPAR           shift and go to state 102
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 89

    (43) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . entity
    (45) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . LPAR entity_list RPAR
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    LPAR            shift and go to state 104
    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity                         shift and go to state 103

state 90

    (44) pos_constraint -> LABEL LSPAR NUMBER RSPAR IN . set
    (23) set -> . base_set
    (24) set -> . PART
    (25) set -> . LRPAR set RRPAR
    (26) set -> . NOT set
    (27) set -> . set INTER set
    (28) set -> . set UNION set
    (20) base_set -> . LABEL
    (21) base_set -> . LABEL LSPAR NUMBER RSPAR
    (22) base_set -> . UNIVERSE

    PART            shift and go to state 33
    LRPAR           shift and go to state 34
    NOT             shift and go to state 35
    LABEL           shift and go to state 36
    UNIVERSE        shift and go to state 37

    set                            shift and go to state 105
    base_set                       shift and go to state 32

state 91

    (30) declare_set -> UNIVERSE LABEL EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 106


state 92

    (32) declare_set -> LAB PROP LABEL EQUALS LPAR . entity_list RPAR
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity_list                    shift and go to state 107
    entity                         shift and go to state 81

state 93

    (42) aggcmp -> math_op LRPAR set RRPAR comp . NUMBER

    NUMBER          shift and go to state 108


state 94

    (47) count_constraint -> COUNT LPAR count_constraint RPAR comp . NUMBER

    NUMBER          shift and go to state 109


state 95

    (21) base_set -> LABEL LSPAR NUMBER RSPAR .

    INTER           reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    UNION           reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    EQUALS          reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    LT              reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    GT              reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    DIFF            reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RRPAR           reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RPAR            reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RSPAR           reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    SEMI            reduce using rule 21 (base_set -> LABEL LSPAR NUMBER RSPAR .)


state 96

    (29) declare_set -> PROP LABEL EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 29 (declare_set -> PROP LABEL EQUALS LPAR entity_list RPAR .)


state 97

    (13) entity_list -> entity COMMA . entity_list
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity                         shift and go to state 81
    entity_list                    shift and go to state 110

state 98

    (31) declare_set -> PROP UNIVERSE EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 31 (declare_set -> PROP UNIVERSE EQUALS LPAR entity_list RPAR .)


state 99

    (35) arrangement -> LABEL IN LPAR replace set RPAR .

    SEMI            reduce using rule 35 (arrangement -> LABEL IN LPAR replace set RPAR .)


state 100

    (36) arrangement -> LABEL IN LSPAR replace set RSPAR .

    SEMI            reduce using rule 36 (arrangement -> LABEL IN LSPAR replace set RSPAR .)


state 101

    (37) arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR .

    SEMI            reduce using rule 37 (arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR .)


state 102

    (38) arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR .

    SEMI            reduce using rule 38 (arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR .)


state 103

    (43) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity .

    SEMI            reduce using rule 43 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity .)


state 104

    (45) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR . entity_list RPAR
    (12) entity_list -> . entity
    (13) entity_list -> . entity COMMA entity_list
    (8) entity -> . NUMBER
    (9) entity -> . LABEL

    NUMBER          shift and go to state 82
    LABEL           shift and go to state 79

    entity_list                    shift and go to state 111
    entity                         shift and go to state 81

state 105

    (44) pos_constraint -> LABEL LSPAR NUMBER RSPAR IN set .
    (27) set -> set . INTER set
    (28) set -> set . UNION set

    SEMI            reduce using rule 44 (pos_constraint -> LABEL LSPAR NUMBER RSPAR IN set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 106

    (30) declare_set -> UNIVERSE LABEL EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 30 (declare_set -> UNIVERSE LABEL EQUALS LPAR entity_list RPAR .)


state 107

    (32) declare_set -> LAB PROP LABEL EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 112


state 108

    (42) aggcmp -> math_op LRPAR set RRPAR comp NUMBER .

    SEMI            reduce using rule 42 (aggcmp -> math_op LRPAR set RRPAR comp NUMBER .)


state 109

    (47) count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .

    SEMI            reduce using rule 47 (count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .)
    RPAR            reduce using rule 47 (count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .)


state 110

    (13) entity_list -> entity COMMA entity_list .

    RPAR            reduce using rule 13 (entity_list -> entity COMMA entity_list .)


state 111

    (45) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 113


state 112

    (32) declare_set -> LAB PROP LABEL EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 32 (declare_set -> LAB PROP LABEL EQUALS LPAR entity_list RPAR .)


state 113

    (45) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 45 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTER in state 57 resolved as shift
WARNING: shift/reduce conflict for UNION in state 57 resolved as shift
WARNING: shift/reduce conflict for INTER in state 71 resolved as shift
WARNING: shift/reduce conflict for UNION in state 71 resolved as shift
WARNING: shift/reduce conflict for INTER in state 72 resolved as shift
WARNING: shift/reduce conflict for UNION in state 72 resolved as shift
