Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> statement program
Rule 3     statement -> declare_set SEMI
Rule 4     statement -> arrangement SEMI
Rule 5     statement -> aggcmp SEMI
Rule 6     statement -> pos_constraint SEMI
Rule 7     statement -> size_constraint SEMI
Rule 8     statement -> count_constraint SEMI
Rule 9     entity -> NUMBER
Rule 10    entity -> LABEL
Rule 11    replace -> SLASH
Rule 12    replace -> SLASH SLASH
Rule 13    entity_list -> entity
Rule 14    entity_list -> entity COMMA entity_list
Rule 15    comp -> EQUALS
Rule 16    comp -> LT
Rule 17    comp -> GT
Rule 18    comp -> GT EQUALS
Rule 19    comp -> LT EQUALS
Rule 20    comp -> DIFF EQUALS
Rule 21    base_set -> LABEL
Rule 22    base_set -> LABEL LSPAR NUMBER RSPAR
Rule 23    base_set -> UNIVERSE
Rule 24    set -> base_set
Rule 25    set -> PART
Rule 26    set -> LRPAR set RRPAR
Rule 27    set -> NOT set
Rule 28    set -> set INTER set
Rule 29    set -> set UNION set
Rule 30    declare_set -> SET LABEL EQUALS LPAR entity_list RPAR
Rule 31    declare_set -> SET UNIVERSE EQUALS LPAR entity_list RPAR
Rule 32    declare_set -> SET INDIST LABEL EQUALS LPAR entity_list RPAR
Rule 33    declare_set -> SET LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
Rule 34    declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
Rule 35    declare_set -> SET LABEL
Rule 36    declare_set -> SET INDIST LABEL
Rule 37    arrangement -> LABEL IN LPAR replace set RPAR
Rule 38    arrangement -> LABEL IN LSPAR replace set RSPAR
Rule 39    arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR
Rule 40    arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR
Rule 41    sc_list -> size_constraint
Rule 42    sc_list -> size_constraint COMMA entity_list
Rule 43    math_op -> SUM
Rule 44    math_op -> MIN
Rule 45    math_op -> MAX
Rule 46    aggcmp -> math_op LRPAR set RRPAR comp NUMBER
Rule 47    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity
Rule 48    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS set
Rule 49    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
Rule 50    pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR
Rule 51    size_constraint -> SLASH set SLASH EQUALS NUMBER
Rule 52    count_constraint -> COUNT set comp NUMBER
Rule 53    count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER
Rule 54    count_constraint -> SLASH set SLASH EQUALS NUMBER

Terminals, with rules where they appear

COL                  : 33 34
COMMA                : 14 42
COMPOSITIONS         : 40
COUNT                : 52 53
DIFF                 : 20
EQUALS               : 15 18 19 20 30 31 32 33 34 47 48 49 50 51 54
GT                   : 17 18
IN                   : 37 38 39 40 50
INDIST               : 32 34 36
INTER                : 28
LABEL                : 10 21 22 30 32 33 34 35 36 37 38 39 40 47 48 49 50 50 50
LPAR                 : 30 31 32 37 49 50 53
LRPAR                : 26 39 40 46
LSPAR                : 22 33 34 38 47 48 49 50 50
LT                   : 16 19
MAX                  : 45
MIN                  : 44
NOT                  : 27
NUMBER               : 9 22 33 33 34 34 46 47 48 49 50 50 51 52 53 54
PART                 : 25
PARTITIONS           : 39
RPAR                 : 30 31 32 37 49 50 53
RRPAR                : 26 39 40 46
RSPAR                : 22 33 34 38 47 48 49 50 50
SEMI                 : 3 4 5 6 7 8
SET                  : 30 31 32 33 34 35 36
SLASH                : 11 12 12 50 51 51 54 54
SUM                  : 43
UNION                : 29
UNIVERSE             : 23 31
error                : 

Nonterminals, with rules where they appear

aggcmp               : 5
arrangement          : 4
base_set             : 24
comp                 : 46 52 53
count_constraint     : 8 53
declare_set          : 3
entity               : 13 14 47
entity_list          : 14 30 31 32 42 49
math_op              : 46
pos_constraint       : 6
program              : 2 0
replace              : 37 38
sc_list              : 50
set                  : 26 27 28 28 29 29 37 38 39 40 46 48 51 52 54
size_constraint      : 7 41 42
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . declare_set SEMI
    (4) statement -> . arrangement SEMI
    (5) statement -> . aggcmp SEMI
    (6) statement -> . pos_constraint SEMI
    (7) statement -> . size_constraint SEMI
    (8) statement -> . count_constraint SEMI
    (30) declare_set -> . SET LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> . SET UNIVERSE EQUALS LPAR entity_list RPAR
    (32) declare_set -> . SET INDIST LABEL EQUALS LPAR entity_list RPAR
    (33) declare_set -> . SET LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (34) declare_set -> . SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (35) declare_set -> . SET LABEL
    (36) declare_set -> . SET INDIST LABEL
    (37) arrangement -> . LABEL IN LPAR replace set RPAR
    (38) arrangement -> . LABEL IN LSPAR replace set RSPAR
    (39) arrangement -> . LABEL IN PARTITIONS LRPAR set RRPAR
    (40) arrangement -> . LABEL IN COMPOSITIONS LRPAR set RRPAR
    (46) aggcmp -> . math_op LRPAR set RRPAR comp NUMBER
    (47) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS entity
    (48) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS set
    (49) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR
    (51) size_constraint -> . SLASH set SLASH EQUALS NUMBER
    (52) count_constraint -> . COUNT set comp NUMBER
    (53) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER
    (54) count_constraint -> . SLASH set SLASH EQUALS NUMBER
    (43) math_op -> . SUM
    (44) math_op -> . MIN
    (45) math_op -> . MAX

    SET             shift and go to state 9
    LABEL           shift and go to state 10
    SLASH           shift and go to state 12
    COUNT           shift and go to state 13
    SUM             shift and go to state 14
    MIN             shift and go to state 15
    MAX             shift and go to state 16

    program                        shift and go to state 1
    statement                      shift and go to state 2
    declare_set                    shift and go to state 3
    arrangement                    shift and go to state 4
    aggcmp                         shift and go to state 5
    pos_constraint                 shift and go to state 6
    size_constraint                shift and go to state 7
    count_constraint               shift and go to state 8
    math_op                        shift and go to state 11

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (2) program -> statement . program
    (1) program -> . statement
    (2) program -> . statement program
    (3) statement -> . declare_set SEMI
    (4) statement -> . arrangement SEMI
    (5) statement -> . aggcmp SEMI
    (6) statement -> . pos_constraint SEMI
    (7) statement -> . size_constraint SEMI
    (8) statement -> . count_constraint SEMI
    (30) declare_set -> . SET LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> . SET UNIVERSE EQUALS LPAR entity_list RPAR
    (32) declare_set -> . SET INDIST LABEL EQUALS LPAR entity_list RPAR
    (33) declare_set -> . SET LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (34) declare_set -> . SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (35) declare_set -> . SET LABEL
    (36) declare_set -> . SET INDIST LABEL
    (37) arrangement -> . LABEL IN LPAR replace set RPAR
    (38) arrangement -> . LABEL IN LSPAR replace set RSPAR
    (39) arrangement -> . LABEL IN PARTITIONS LRPAR set RRPAR
    (40) arrangement -> . LABEL IN COMPOSITIONS LRPAR set RRPAR
    (46) aggcmp -> . math_op LRPAR set RRPAR comp NUMBER
    (47) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS entity
    (48) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS set
    (49) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> . LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR
    (51) size_constraint -> . SLASH set SLASH EQUALS NUMBER
    (52) count_constraint -> . COUNT set comp NUMBER
    (53) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER
    (54) count_constraint -> . SLASH set SLASH EQUALS NUMBER
    (43) math_op -> . SUM
    (44) math_op -> . MIN
    (45) math_op -> . MAX

    $end            reduce using rule 1 (program -> statement .)
    SET             shift and go to state 9
    LABEL           shift and go to state 10
    SLASH           shift and go to state 12
    COUNT           shift and go to state 13
    SUM             shift and go to state 14
    MIN             shift and go to state 15
    MAX             shift and go to state 16

    statement                      shift and go to state 2
    program                        shift and go to state 17
    declare_set                    shift and go to state 3
    arrangement                    shift and go to state 4
    aggcmp                         shift and go to state 5
    pos_constraint                 shift and go to state 6
    size_constraint                shift and go to state 7
    count_constraint               shift and go to state 8
    math_op                        shift and go to state 11

state 3

    (3) statement -> declare_set . SEMI

    SEMI            shift and go to state 18


state 4

    (4) statement -> arrangement . SEMI

    SEMI            shift and go to state 19


state 5

    (5) statement -> aggcmp . SEMI

    SEMI            shift and go to state 20


state 6

    (6) statement -> pos_constraint . SEMI

    SEMI            shift and go to state 21


state 7

    (7) statement -> size_constraint . SEMI

    SEMI            shift and go to state 22


state 8

    (8) statement -> count_constraint . SEMI

    SEMI            shift and go to state 23


state 9

    (30) declare_set -> SET . LABEL EQUALS LPAR entity_list RPAR
    (31) declare_set -> SET . UNIVERSE EQUALS LPAR entity_list RPAR
    (32) declare_set -> SET . INDIST LABEL EQUALS LPAR entity_list RPAR
    (33) declare_set -> SET . LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (34) declare_set -> SET . INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (35) declare_set -> SET . LABEL
    (36) declare_set -> SET . INDIST LABEL

    LABEL           shift and go to state 24
    UNIVERSE        shift and go to state 25
    INDIST          shift and go to state 26


state 10

    (37) arrangement -> LABEL . IN LPAR replace set RPAR
    (38) arrangement -> LABEL . IN LSPAR replace set RSPAR
    (39) arrangement -> LABEL . IN PARTITIONS LRPAR set RRPAR
    (40) arrangement -> LABEL . IN COMPOSITIONS LRPAR set RRPAR
    (47) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS entity
    (48) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS set
    (49) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> LABEL . LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    IN              shift and go to state 27
    LSPAR           shift and go to state 28


state 11

    (46) aggcmp -> math_op . LRPAR set RRPAR comp NUMBER

    LRPAR           shift and go to state 29


state 12

    (51) size_constraint -> SLASH . set SLASH EQUALS NUMBER
    (54) count_constraint -> SLASH . set SLASH EQUALS NUMBER
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 30
    base_set                       shift and go to state 31

state 13

    (52) count_constraint -> COUNT . set comp NUMBER
    (53) count_constraint -> COUNT . LPAR count_constraint RPAR comp NUMBER
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    LPAR            shift and go to state 38
    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 37
    base_set                       shift and go to state 31

state 14

    (43) math_op -> SUM .

    LRPAR           reduce using rule 43 (math_op -> SUM .)


state 15

    (44) math_op -> MIN .

    LRPAR           reduce using rule 44 (math_op -> MIN .)


state 16

    (45) math_op -> MAX .

    LRPAR           reduce using rule 45 (math_op -> MAX .)


state 17

    (2) program -> statement program .

    $end            reduce using rule 2 (program -> statement program .)


state 18

    (3) statement -> declare_set SEMI .

    SET             reduce using rule 3 (statement -> declare_set SEMI .)
    LABEL           reduce using rule 3 (statement -> declare_set SEMI .)
    SLASH           reduce using rule 3 (statement -> declare_set SEMI .)
    COUNT           reduce using rule 3 (statement -> declare_set SEMI .)
    SUM             reduce using rule 3 (statement -> declare_set SEMI .)
    MIN             reduce using rule 3 (statement -> declare_set SEMI .)
    MAX             reduce using rule 3 (statement -> declare_set SEMI .)
    $end            reduce using rule 3 (statement -> declare_set SEMI .)


state 19

    (4) statement -> arrangement SEMI .

    SET             reduce using rule 4 (statement -> arrangement SEMI .)
    LABEL           reduce using rule 4 (statement -> arrangement SEMI .)
    SLASH           reduce using rule 4 (statement -> arrangement SEMI .)
    COUNT           reduce using rule 4 (statement -> arrangement SEMI .)
    SUM             reduce using rule 4 (statement -> arrangement SEMI .)
    MIN             reduce using rule 4 (statement -> arrangement SEMI .)
    MAX             reduce using rule 4 (statement -> arrangement SEMI .)
    $end            reduce using rule 4 (statement -> arrangement SEMI .)


state 20

    (5) statement -> aggcmp SEMI .

    SET             reduce using rule 5 (statement -> aggcmp SEMI .)
    LABEL           reduce using rule 5 (statement -> aggcmp SEMI .)
    SLASH           reduce using rule 5 (statement -> aggcmp SEMI .)
    COUNT           reduce using rule 5 (statement -> aggcmp SEMI .)
    SUM             reduce using rule 5 (statement -> aggcmp SEMI .)
    MIN             reduce using rule 5 (statement -> aggcmp SEMI .)
    MAX             reduce using rule 5 (statement -> aggcmp SEMI .)
    $end            reduce using rule 5 (statement -> aggcmp SEMI .)


state 21

    (6) statement -> pos_constraint SEMI .

    SET             reduce using rule 6 (statement -> pos_constraint SEMI .)
    LABEL           reduce using rule 6 (statement -> pos_constraint SEMI .)
    SLASH           reduce using rule 6 (statement -> pos_constraint SEMI .)
    COUNT           reduce using rule 6 (statement -> pos_constraint SEMI .)
    SUM             reduce using rule 6 (statement -> pos_constraint SEMI .)
    MIN             reduce using rule 6 (statement -> pos_constraint SEMI .)
    MAX             reduce using rule 6 (statement -> pos_constraint SEMI .)
    $end            reduce using rule 6 (statement -> pos_constraint SEMI .)


state 22

    (7) statement -> size_constraint SEMI .

    SET             reduce using rule 7 (statement -> size_constraint SEMI .)
    LABEL           reduce using rule 7 (statement -> size_constraint SEMI .)
    SLASH           reduce using rule 7 (statement -> size_constraint SEMI .)
    COUNT           reduce using rule 7 (statement -> size_constraint SEMI .)
    SUM             reduce using rule 7 (statement -> size_constraint SEMI .)
    MIN             reduce using rule 7 (statement -> size_constraint SEMI .)
    MAX             reduce using rule 7 (statement -> size_constraint SEMI .)
    $end            reduce using rule 7 (statement -> size_constraint SEMI .)


state 23

    (8) statement -> count_constraint SEMI .

    SET             reduce using rule 8 (statement -> count_constraint SEMI .)
    LABEL           reduce using rule 8 (statement -> count_constraint SEMI .)
    SLASH           reduce using rule 8 (statement -> count_constraint SEMI .)
    COUNT           reduce using rule 8 (statement -> count_constraint SEMI .)
    SUM             reduce using rule 8 (statement -> count_constraint SEMI .)
    MIN             reduce using rule 8 (statement -> count_constraint SEMI .)
    MAX             reduce using rule 8 (statement -> count_constraint SEMI .)
    $end            reduce using rule 8 (statement -> count_constraint SEMI .)


state 24

    (30) declare_set -> SET LABEL . EQUALS LPAR entity_list RPAR
    (33) declare_set -> SET LABEL . EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (35) declare_set -> SET LABEL .

    EQUALS          shift and go to state 39
    SEMI            reduce using rule 35 (declare_set -> SET LABEL .)


state 25

    (31) declare_set -> SET UNIVERSE . EQUALS LPAR entity_list RPAR

    EQUALS          shift and go to state 40


state 26

    (32) declare_set -> SET INDIST . LABEL EQUALS LPAR entity_list RPAR
    (34) declare_set -> SET INDIST . LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (36) declare_set -> SET INDIST . LABEL

    LABEL           shift and go to state 41


state 27

    (37) arrangement -> LABEL IN . LPAR replace set RPAR
    (38) arrangement -> LABEL IN . LSPAR replace set RSPAR
    (39) arrangement -> LABEL IN . PARTITIONS LRPAR set RRPAR
    (40) arrangement -> LABEL IN . COMPOSITIONS LRPAR set RRPAR

    LPAR            shift and go to state 42
    LSPAR           shift and go to state 43
    PARTITIONS      shift and go to state 44
    COMPOSITIONS    shift and go to state 45


state 28

    (47) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS entity
    (48) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS set
    (49) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> LABEL LSPAR . NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    NUMBER          shift and go to state 46


state 29

    (46) aggcmp -> math_op LRPAR . set RRPAR comp NUMBER
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 47
    base_set                       shift and go to state 31

state 30

    (51) size_constraint -> SLASH set . SLASH EQUALS NUMBER
    (54) count_constraint -> SLASH set . SLASH EQUALS NUMBER
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    SLASH           shift and go to state 48
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 31

    (24) set -> base_set .

    SLASH           reduce using rule 24 (set -> base_set .)
    INTER           reduce using rule 24 (set -> base_set .)
    UNION           reduce using rule 24 (set -> base_set .)
    EQUALS          reduce using rule 24 (set -> base_set .)
    LT              reduce using rule 24 (set -> base_set .)
    GT              reduce using rule 24 (set -> base_set .)
    DIFF            reduce using rule 24 (set -> base_set .)
    RRPAR           reduce using rule 24 (set -> base_set .)
    RPAR            reduce using rule 24 (set -> base_set .)
    RSPAR           reduce using rule 24 (set -> base_set .)
    SEMI            reduce using rule 24 (set -> base_set .)


state 32

    (25) set -> PART .

    SLASH           reduce using rule 25 (set -> PART .)
    INTER           reduce using rule 25 (set -> PART .)
    UNION           reduce using rule 25 (set -> PART .)
    EQUALS          reduce using rule 25 (set -> PART .)
    LT              reduce using rule 25 (set -> PART .)
    GT              reduce using rule 25 (set -> PART .)
    DIFF            reduce using rule 25 (set -> PART .)
    RRPAR           reduce using rule 25 (set -> PART .)
    RPAR            reduce using rule 25 (set -> PART .)
    RSPAR           reduce using rule 25 (set -> PART .)
    SEMI            reduce using rule 25 (set -> PART .)


state 33

    (26) set -> LRPAR . set RRPAR
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 51
    base_set                       shift and go to state 31

state 34

    (27) set -> NOT . set
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 52
    base_set                       shift and go to state 31

state 35

    (21) base_set -> LABEL .
    (22) base_set -> LABEL . LSPAR NUMBER RSPAR

    SLASH           reduce using rule 21 (base_set -> LABEL .)
    INTER           reduce using rule 21 (base_set -> LABEL .)
    UNION           reduce using rule 21 (base_set -> LABEL .)
    EQUALS          reduce using rule 21 (base_set -> LABEL .)
    LT              reduce using rule 21 (base_set -> LABEL .)
    GT              reduce using rule 21 (base_set -> LABEL .)
    DIFF            reduce using rule 21 (base_set -> LABEL .)
    RRPAR           reduce using rule 21 (base_set -> LABEL .)
    RPAR            reduce using rule 21 (base_set -> LABEL .)
    RSPAR           reduce using rule 21 (base_set -> LABEL .)
    SEMI            reduce using rule 21 (base_set -> LABEL .)
    LSPAR           shift and go to state 53


state 36

    (23) base_set -> UNIVERSE .

    SLASH           reduce using rule 23 (base_set -> UNIVERSE .)
    INTER           reduce using rule 23 (base_set -> UNIVERSE .)
    UNION           reduce using rule 23 (base_set -> UNIVERSE .)
    EQUALS          reduce using rule 23 (base_set -> UNIVERSE .)
    LT              reduce using rule 23 (base_set -> UNIVERSE .)
    GT              reduce using rule 23 (base_set -> UNIVERSE .)
    DIFF            reduce using rule 23 (base_set -> UNIVERSE .)
    RRPAR           reduce using rule 23 (base_set -> UNIVERSE .)
    RPAR            reduce using rule 23 (base_set -> UNIVERSE .)
    RSPAR           reduce using rule 23 (base_set -> UNIVERSE .)
    SEMI            reduce using rule 23 (base_set -> UNIVERSE .)


state 37

    (52) count_constraint -> COUNT set . comp NUMBER
    (28) set -> set . INTER set
    (29) set -> set . UNION set
    (15) comp -> . EQUALS
    (16) comp -> . LT
    (17) comp -> . GT
    (18) comp -> . GT EQUALS
    (19) comp -> . LT EQUALS
    (20) comp -> . DIFF EQUALS

    INTER           shift and go to state 49
    UNION           shift and go to state 50
    EQUALS          shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 57
    DIFF            shift and go to state 58

    comp                           shift and go to state 54

state 38

    (53) count_constraint -> COUNT LPAR . count_constraint RPAR comp NUMBER
    (52) count_constraint -> . COUNT set comp NUMBER
    (53) count_constraint -> . COUNT LPAR count_constraint RPAR comp NUMBER
    (54) count_constraint -> . SLASH set SLASH EQUALS NUMBER

    COUNT           shift and go to state 13
    SLASH           shift and go to state 60

    count_constraint               shift and go to state 59

state 39

    (30) declare_set -> SET LABEL EQUALS . LPAR entity_list RPAR
    (33) declare_set -> SET LABEL EQUALS . LSPAR NUMBER COL NUMBER RSPAR

    LPAR            shift and go to state 61
    LSPAR           shift and go to state 62


state 40

    (31) declare_set -> SET UNIVERSE EQUALS . LPAR entity_list RPAR

    LPAR            shift and go to state 63


state 41

    (32) declare_set -> SET INDIST LABEL . EQUALS LPAR entity_list RPAR
    (34) declare_set -> SET INDIST LABEL . EQUALS LSPAR NUMBER COL NUMBER RSPAR
    (36) declare_set -> SET INDIST LABEL .

    EQUALS          shift and go to state 64
    SEMI            reduce using rule 36 (declare_set -> SET INDIST LABEL .)


state 42

    (37) arrangement -> LABEL IN LPAR . replace set RPAR
    (11) replace -> . SLASH
    (12) replace -> . SLASH SLASH

    SLASH           shift and go to state 66

    replace                        shift and go to state 65

state 43

    (38) arrangement -> LABEL IN LSPAR . replace set RSPAR
    (11) replace -> . SLASH
    (12) replace -> . SLASH SLASH

    SLASH           shift and go to state 66

    replace                        shift and go to state 67

state 44

    (39) arrangement -> LABEL IN PARTITIONS . LRPAR set RRPAR

    LRPAR           shift and go to state 68


state 45

    (40) arrangement -> LABEL IN COMPOSITIONS . LRPAR set RRPAR

    LRPAR           shift and go to state 69


state 46

    (47) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS entity
    (48) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS set
    (49) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> LABEL LSPAR NUMBER . RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    RSPAR           shift and go to state 70


state 47

    (46) aggcmp -> math_op LRPAR set . RRPAR comp NUMBER
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RRPAR           shift and go to state 71
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 48

    (51) size_constraint -> SLASH set SLASH . EQUALS NUMBER
    (54) count_constraint -> SLASH set SLASH . EQUALS NUMBER

    EQUALS          shift and go to state 72


state 49

    (28) set -> set INTER . set
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 73
    base_set                       shift and go to state 31

state 50

    (29) set -> set UNION . set
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 74
    base_set                       shift and go to state 31

state 51

    (26) set -> LRPAR set . RRPAR
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RRPAR           shift and go to state 75
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 52

    (27) set -> NOT set .
    (28) set -> set . INTER set
    (29) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    SLASH           reduce using rule 27 (set -> NOT set .)
    EQUALS          reduce using rule 27 (set -> NOT set .)
    LT              reduce using rule 27 (set -> NOT set .)
    GT              reduce using rule 27 (set -> NOT set .)
    DIFF            reduce using rule 27 (set -> NOT set .)
    RRPAR           reduce using rule 27 (set -> NOT set .)
    RPAR            reduce using rule 27 (set -> NOT set .)
    RSPAR           reduce using rule 27 (set -> NOT set .)
    SEMI            reduce using rule 27 (set -> NOT set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 27 (set -> NOT set .) ]
  ! UNION           [ reduce using rule 27 (set -> NOT set .) ]


state 53

    (22) base_set -> LABEL LSPAR . NUMBER RSPAR

    NUMBER          shift and go to state 76


state 54

    (52) count_constraint -> COUNT set comp . NUMBER

    NUMBER          shift and go to state 77


state 55

    (15) comp -> EQUALS .

    NUMBER          reduce using rule 15 (comp -> EQUALS .)


state 56

    (16) comp -> LT .
    (19) comp -> LT . EQUALS

    NUMBER          reduce using rule 16 (comp -> LT .)
    EQUALS          shift and go to state 78


state 57

    (17) comp -> GT .
    (18) comp -> GT . EQUALS

    NUMBER          reduce using rule 17 (comp -> GT .)
    EQUALS          shift and go to state 79


state 58

    (20) comp -> DIFF . EQUALS

    EQUALS          shift and go to state 80


state 59

    (53) count_constraint -> COUNT LPAR count_constraint . RPAR comp NUMBER

    RPAR            shift and go to state 81


state 60

    (54) count_constraint -> SLASH . set SLASH EQUALS NUMBER
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 82
    base_set                       shift and go to state 31

state 61

    (30) declare_set -> SET LABEL EQUALS LPAR . entity_list RPAR
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83

    entity_list                    shift and go to state 84
    entity                         shift and go to state 85

state 62

    (33) declare_set -> SET LABEL EQUALS LSPAR . NUMBER COL NUMBER RSPAR

    NUMBER          shift and go to state 87


state 63

    (31) declare_set -> SET UNIVERSE EQUALS LPAR . entity_list RPAR
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83

    entity_list                    shift and go to state 88
    entity                         shift and go to state 85

state 64

    (32) declare_set -> SET INDIST LABEL EQUALS . LPAR entity_list RPAR
    (34) declare_set -> SET INDIST LABEL EQUALS . LSPAR NUMBER COL NUMBER RSPAR

    LPAR            shift and go to state 89
    LSPAR           shift and go to state 90


state 65

    (37) arrangement -> LABEL IN LPAR replace . set RPAR
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 91
    base_set                       shift and go to state 31

state 66

    (11) replace -> SLASH .
    (12) replace -> SLASH . SLASH

    PART            reduce using rule 11 (replace -> SLASH .)
    LRPAR           reduce using rule 11 (replace -> SLASH .)
    NOT             reduce using rule 11 (replace -> SLASH .)
    LABEL           reduce using rule 11 (replace -> SLASH .)
    UNIVERSE        reduce using rule 11 (replace -> SLASH .)
    SLASH           shift and go to state 92


state 67

    (38) arrangement -> LABEL IN LSPAR replace . set RSPAR
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 93
    base_set                       shift and go to state 31

state 68

    (39) arrangement -> LABEL IN PARTITIONS LRPAR . set RRPAR
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 94
    base_set                       shift and go to state 31

state 69

    (40) arrangement -> LABEL IN COMPOSITIONS LRPAR . set RRPAR
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 95
    base_set                       shift and go to state 31

state 70

    (47) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS entity
    (48) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS set
    (49) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS LPAR entity_list RPAR
    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR . EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    EQUALS          shift and go to state 96


state 71

    (46) aggcmp -> math_op LRPAR set RRPAR . comp NUMBER
    (15) comp -> . EQUALS
    (16) comp -> . LT
    (17) comp -> . GT
    (18) comp -> . GT EQUALS
    (19) comp -> . LT EQUALS
    (20) comp -> . DIFF EQUALS

    EQUALS          shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 57
    DIFF            shift and go to state 58

    comp                           shift and go to state 97

state 72

    (51) size_constraint -> SLASH set SLASH EQUALS . NUMBER
    (54) count_constraint -> SLASH set SLASH EQUALS . NUMBER

    NUMBER          shift and go to state 98


state 73

    (28) set -> set INTER set .
    (28) set -> set . INTER set
    (29) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    SLASH           reduce using rule 28 (set -> set INTER set .)
    EQUALS          reduce using rule 28 (set -> set INTER set .)
    LT              reduce using rule 28 (set -> set INTER set .)
    GT              reduce using rule 28 (set -> set INTER set .)
    DIFF            reduce using rule 28 (set -> set INTER set .)
    RRPAR           reduce using rule 28 (set -> set INTER set .)
    RPAR            reduce using rule 28 (set -> set INTER set .)
    RSPAR           reduce using rule 28 (set -> set INTER set .)
    SEMI            reduce using rule 28 (set -> set INTER set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 28 (set -> set INTER set .) ]
  ! UNION           [ reduce using rule 28 (set -> set INTER set .) ]


state 74

    (29) set -> set UNION set .
    (28) set -> set . INTER set
    (29) set -> set . UNION set

  ! shift/reduce conflict for INTER resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
    SLASH           reduce using rule 29 (set -> set UNION set .)
    EQUALS          reduce using rule 29 (set -> set UNION set .)
    LT              reduce using rule 29 (set -> set UNION set .)
    GT              reduce using rule 29 (set -> set UNION set .)
    DIFF            reduce using rule 29 (set -> set UNION set .)
    RRPAR           reduce using rule 29 (set -> set UNION set .)
    RPAR            reduce using rule 29 (set -> set UNION set .)
    RSPAR           reduce using rule 29 (set -> set UNION set .)
    SEMI            reduce using rule 29 (set -> set UNION set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50

  ! INTER           [ reduce using rule 29 (set -> set UNION set .) ]
  ! UNION           [ reduce using rule 29 (set -> set UNION set .) ]


state 75

    (26) set -> LRPAR set RRPAR .

    SLASH           reduce using rule 26 (set -> LRPAR set RRPAR .)
    INTER           reduce using rule 26 (set -> LRPAR set RRPAR .)
    UNION           reduce using rule 26 (set -> LRPAR set RRPAR .)
    EQUALS          reduce using rule 26 (set -> LRPAR set RRPAR .)
    LT              reduce using rule 26 (set -> LRPAR set RRPAR .)
    GT              reduce using rule 26 (set -> LRPAR set RRPAR .)
    DIFF            reduce using rule 26 (set -> LRPAR set RRPAR .)
    RRPAR           reduce using rule 26 (set -> LRPAR set RRPAR .)
    RPAR            reduce using rule 26 (set -> LRPAR set RRPAR .)
    RSPAR           reduce using rule 26 (set -> LRPAR set RRPAR .)
    SEMI            reduce using rule 26 (set -> LRPAR set RRPAR .)


state 76

    (22) base_set -> LABEL LSPAR NUMBER . RSPAR

    RSPAR           shift and go to state 99


state 77

    (52) count_constraint -> COUNT set comp NUMBER .

    SEMI            reduce using rule 52 (count_constraint -> COUNT set comp NUMBER .)
    RPAR            reduce using rule 52 (count_constraint -> COUNT set comp NUMBER .)


state 78

    (19) comp -> LT EQUALS .

    NUMBER          reduce using rule 19 (comp -> LT EQUALS .)


state 79

    (18) comp -> GT EQUALS .

    NUMBER          reduce using rule 18 (comp -> GT EQUALS .)


state 80

    (20) comp -> DIFF EQUALS .

    NUMBER          reduce using rule 20 (comp -> DIFF EQUALS .)


state 81

    (53) count_constraint -> COUNT LPAR count_constraint RPAR . comp NUMBER
    (15) comp -> . EQUALS
    (16) comp -> . LT
    (17) comp -> . GT
    (18) comp -> . GT EQUALS
    (19) comp -> . LT EQUALS
    (20) comp -> . DIFF EQUALS

    EQUALS          shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 57
    DIFF            shift and go to state 58

    comp                           shift and go to state 100

state 82

    (54) count_constraint -> SLASH set . SLASH EQUALS NUMBER
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    SLASH           shift and go to state 101
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 83

    (10) entity -> LABEL .

    COMMA           reduce using rule 10 (entity -> LABEL .)
    RPAR            reduce using rule 10 (entity -> LABEL .)
    SLASH           reduce using rule 10 (entity -> LABEL .)


state 84

    (30) declare_set -> SET LABEL EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 102


state 85

    (13) entity_list -> entity .
    (14) entity_list -> entity . COMMA entity_list

    RPAR            reduce using rule 13 (entity_list -> entity .)
    SLASH           reduce using rule 13 (entity_list -> entity .)
    COMMA           shift and go to state 103


state 86

    (9) entity -> NUMBER .

    COMMA           reduce using rule 9 (entity -> NUMBER .)
    RPAR            reduce using rule 9 (entity -> NUMBER .)
    SEMI            reduce using rule 9 (entity -> NUMBER .)
    SLASH           reduce using rule 9 (entity -> NUMBER .)


state 87

    (33) declare_set -> SET LABEL EQUALS LSPAR NUMBER . COL NUMBER RSPAR

    COL             shift and go to state 104


state 88

    (31) declare_set -> SET UNIVERSE EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 105


state 89

    (32) declare_set -> SET INDIST LABEL EQUALS LPAR . entity_list RPAR
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83

    entity_list                    shift and go to state 106
    entity                         shift and go to state 85

state 90

    (34) declare_set -> SET INDIST LABEL EQUALS LSPAR . NUMBER COL NUMBER RSPAR

    NUMBER          shift and go to state 107


state 91

    (37) arrangement -> LABEL IN LPAR replace set . RPAR
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RPAR            shift and go to state 108
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 92

    (12) replace -> SLASH SLASH .

    PART            reduce using rule 12 (replace -> SLASH SLASH .)
    LRPAR           reduce using rule 12 (replace -> SLASH SLASH .)
    NOT             reduce using rule 12 (replace -> SLASH SLASH .)
    LABEL           reduce using rule 12 (replace -> SLASH SLASH .)
    UNIVERSE        reduce using rule 12 (replace -> SLASH SLASH .)


state 93

    (38) arrangement -> LABEL IN LSPAR replace set . RSPAR
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RSPAR           shift and go to state 109
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 94

    (39) arrangement -> LABEL IN PARTITIONS LRPAR set . RRPAR
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RRPAR           shift and go to state 110
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 95

    (40) arrangement -> LABEL IN COMPOSITIONS LRPAR set . RRPAR
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    RRPAR           shift and go to state 111
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 96

    (47) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . entity
    (48) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . set
    (49) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . LPAR entity_list RPAR
    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS . LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR
    (9) entity -> . NUMBER
    (10) entity -> . LABEL
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    LPAR            shift and go to state 115
    NUMBER          shift and go to state 86
    LABEL           shift and go to state 112
    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    UNIVERSE        shift and go to state 36

    entity                         shift and go to state 113
    set                            shift and go to state 114
    base_set                       shift and go to state 31

state 97

    (46) aggcmp -> math_op LRPAR set RRPAR comp . NUMBER

    NUMBER          shift and go to state 116


state 98

    (51) size_constraint -> SLASH set SLASH EQUALS NUMBER .
    (54) count_constraint -> SLASH set SLASH EQUALS NUMBER .

  ! reduce/reduce conflict for SEMI resolved using rule 51 (size_constraint -> SLASH set SLASH EQUALS NUMBER .)
    SEMI            reduce using rule 51 (size_constraint -> SLASH set SLASH EQUALS NUMBER .)

  ! SEMI            [ reduce using rule 54 (count_constraint -> SLASH set SLASH EQUALS NUMBER .) ]


state 99

    (22) base_set -> LABEL LSPAR NUMBER RSPAR .

    SLASH           reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    INTER           reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    UNION           reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    EQUALS          reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    LT              reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    GT              reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    DIFF            reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RRPAR           reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RPAR            reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    RSPAR           reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)
    SEMI            reduce using rule 22 (base_set -> LABEL LSPAR NUMBER RSPAR .)


state 100

    (53) count_constraint -> COUNT LPAR count_constraint RPAR comp . NUMBER

    NUMBER          shift and go to state 117


state 101

    (54) count_constraint -> SLASH set SLASH . EQUALS NUMBER

    EQUALS          shift and go to state 118


state 102

    (30) declare_set -> SET LABEL EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 30 (declare_set -> SET LABEL EQUALS LPAR entity_list RPAR .)


state 103

    (14) entity_list -> entity COMMA . entity_list
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83

    entity                         shift and go to state 85
    entity_list                    shift and go to state 119

state 104

    (33) declare_set -> SET LABEL EQUALS LSPAR NUMBER COL . NUMBER RSPAR

    NUMBER          shift and go to state 120


state 105

    (31) declare_set -> SET UNIVERSE EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 31 (declare_set -> SET UNIVERSE EQUALS LPAR entity_list RPAR .)


state 106

    (32) declare_set -> SET INDIST LABEL EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 121


state 107

    (34) declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER . COL NUMBER RSPAR

    COL             shift and go to state 122


state 108

    (37) arrangement -> LABEL IN LPAR replace set RPAR .

    SEMI            reduce using rule 37 (arrangement -> LABEL IN LPAR replace set RPAR .)


state 109

    (38) arrangement -> LABEL IN LSPAR replace set RSPAR .

    SEMI            reduce using rule 38 (arrangement -> LABEL IN LSPAR replace set RSPAR .)


state 110

    (39) arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR .

    SEMI            reduce using rule 39 (arrangement -> LABEL IN PARTITIONS LRPAR set RRPAR .)


state 111

    (40) arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR .

    SEMI            reduce using rule 40 (arrangement -> LABEL IN COMPOSITIONS LRPAR set RRPAR .)


state 112

    (10) entity -> LABEL .
    (21) base_set -> LABEL .
    (22) base_set -> LABEL . LSPAR NUMBER RSPAR

  ! reduce/reduce conflict for SEMI resolved using rule 10 (entity -> LABEL .)
    SEMI            reduce using rule 10 (entity -> LABEL .)
    INTER           reduce using rule 21 (base_set -> LABEL .)
    UNION           reduce using rule 21 (base_set -> LABEL .)
    LSPAR           shift and go to state 53

  ! SEMI            [ reduce using rule 21 (base_set -> LABEL .) ]


state 113

    (47) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity .

    SEMI            reduce using rule 47 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS entity .)


state 114

    (48) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS set .
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    SEMI            reduce using rule 48 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS set .)
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 115

    (49) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR . entity_list RPAR
    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR . sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (41) sc_list -> . size_constraint
    (42) sc_list -> . size_constraint COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL
    (51) size_constraint -> . SLASH set SLASH EQUALS NUMBER

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83
    SLASH           shift and go to state 125

    entity_list                    shift and go to state 123
    sc_list                        shift and go to state 124
    entity                         shift and go to state 85
    size_constraint                shift and go to state 126

state 116

    (46) aggcmp -> math_op LRPAR set RRPAR comp NUMBER .

    SEMI            reduce using rule 46 (aggcmp -> math_op LRPAR set RRPAR comp NUMBER .)


state 117

    (53) count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .

    SEMI            reduce using rule 53 (count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .)
    RPAR            reduce using rule 53 (count_constraint -> COUNT LPAR count_constraint RPAR comp NUMBER .)


state 118

    (54) count_constraint -> SLASH set SLASH EQUALS . NUMBER

    NUMBER          shift and go to state 127


state 119

    (14) entity_list -> entity COMMA entity_list .

    RPAR            reduce using rule 14 (entity_list -> entity COMMA entity_list .)
    SLASH           reduce using rule 14 (entity_list -> entity COMMA entity_list .)


state 120

    (33) declare_set -> SET LABEL EQUALS LSPAR NUMBER COL NUMBER . RSPAR

    RSPAR           shift and go to state 128


state 121

    (32) declare_set -> SET INDIST LABEL EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 32 (declare_set -> SET INDIST LABEL EQUALS LPAR entity_list RPAR .)


state 122

    (34) declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER COL . NUMBER RSPAR

    NUMBER          shift and go to state 129


state 123

    (49) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list . RPAR

    RPAR            shift and go to state 130


state 124

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list . SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    SLASH           shift and go to state 131


state 125

    (51) size_constraint -> SLASH . set SLASH EQUALS NUMBER
    (24) set -> . base_set
    (25) set -> . PART
    (26) set -> . LRPAR set RRPAR
    (27) set -> . NOT set
    (28) set -> . set INTER set
    (29) set -> . set UNION set
    (21) base_set -> . LABEL
    (22) base_set -> . LABEL LSPAR NUMBER RSPAR
    (23) base_set -> . UNIVERSE

    PART            shift and go to state 32
    LRPAR           shift and go to state 33
    NOT             shift and go to state 34
    LABEL           shift and go to state 35
    UNIVERSE        shift and go to state 36

    set                            shift and go to state 132
    base_set                       shift and go to state 31

state 126

    (41) sc_list -> size_constraint .
    (42) sc_list -> size_constraint . COMMA entity_list

    SLASH           reduce using rule 41 (sc_list -> size_constraint .)
    COMMA           shift and go to state 133


state 127

    (54) count_constraint -> SLASH set SLASH EQUALS NUMBER .

    RPAR            reduce using rule 54 (count_constraint -> SLASH set SLASH EQUALS NUMBER .)


state 128

    (33) declare_set -> SET LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR .

    SEMI            reduce using rule 33 (declare_set -> SET LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR .)


state 129

    (34) declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER . RSPAR

    RSPAR           shift and go to state 134


state 130

    (49) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR .

    SEMI            reduce using rule 49 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR entity_list RPAR .)


state 131

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH . LABEL IN LABEL LSPAR NUMBER RSPAR RPAR

    LABEL           shift and go to state 135


state 132

    (51) size_constraint -> SLASH set . SLASH EQUALS NUMBER
    (28) set -> set . INTER set
    (29) set -> set . UNION set

    SLASH           shift and go to state 136
    INTER           shift and go to state 49
    UNION           shift and go to state 50


state 133

    (42) sc_list -> size_constraint COMMA . entity_list
    (13) entity_list -> . entity
    (14) entity_list -> . entity COMMA entity_list
    (9) entity -> . NUMBER
    (10) entity -> . LABEL

    NUMBER          shift and go to state 86
    LABEL           shift and go to state 83

    entity_list                    shift and go to state 137
    entity                         shift and go to state 85

state 134

    (34) declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR .

    SEMI            reduce using rule 34 (declare_set -> SET INDIST LABEL EQUALS LSPAR NUMBER COL NUMBER RSPAR .)


state 135

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL . IN LABEL LSPAR NUMBER RSPAR RPAR

    IN              shift and go to state 138


state 136

    (51) size_constraint -> SLASH set SLASH . EQUALS NUMBER

    EQUALS          shift and go to state 139


state 137

    (42) sc_list -> size_constraint COMMA entity_list .

    SLASH           reduce using rule 42 (sc_list -> size_constraint COMMA entity_list .)


state 138

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN . LABEL LSPAR NUMBER RSPAR RPAR

    LABEL           shift and go to state 140


state 139

    (51) size_constraint -> SLASH set SLASH EQUALS . NUMBER

    NUMBER          shift and go to state 141


state 140

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL . LSPAR NUMBER RSPAR RPAR

    LSPAR           shift and go to state 142


state 141

    (51) size_constraint -> SLASH set SLASH EQUALS NUMBER .

    COMMA           reduce using rule 51 (size_constraint -> SLASH set SLASH EQUALS NUMBER .)
    SLASH           reduce using rule 51 (size_constraint -> SLASH set SLASH EQUALS NUMBER .)


state 142

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR . NUMBER RSPAR RPAR

    NUMBER          shift and go to state 143


state 143

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER . RSPAR RPAR

    RSPAR           shift and go to state 144


state 144

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR . RPAR

    RPAR            shift and go to state 145


state 145

    (50) pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR .

    SEMI            reduce using rule 50 (pos_constraint -> LABEL LSPAR NUMBER RSPAR EQUALS LPAR sc_list SLASH LABEL IN LABEL LSPAR NUMBER RSPAR RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTER in state 52 resolved as shift
WARNING: shift/reduce conflict for UNION in state 52 resolved as shift
WARNING: shift/reduce conflict for INTER in state 73 resolved as shift
WARNING: shift/reduce conflict for UNION in state 73 resolved as shift
WARNING: shift/reduce conflict for INTER in state 74 resolved as shift
WARNING: shift/reduce conflict for UNION in state 74 resolved as shift
WARNING: reduce/reduce conflict in state 98 resolved using rule (size_constraint -> SLASH set SLASH EQUALS NUMBER)
WARNING: rejected rule (count_constraint -> SLASH set SLASH EQUALS NUMBER) in state 98
WARNING: reduce/reduce conflict in state 112 resolved using rule (entity -> LABEL)
WARNING: rejected rule (base_set -> LABEL) in state 112
